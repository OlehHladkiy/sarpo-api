{"version":3,"sources":["../../../src/modules/user/user.resolver.ts"],"names":["resolvers","Query","fetchMe","_","__","ctx","UserController","Mutation","updateUser","data","updateUserPassword","middlewares"],"mappings":";;;;;;;AAEA;;;;AAEO,MAAMA,SAAS,GAAG;AACvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,OAAOC,CAAP,EAAeC,EAAf,EAAwBC,GAAxB,KACP,MAAMC,cAAeJ,OAAf,CAAuBG,GAAvB;AAFH,GADgB;AAKvBE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,OAAOL,CAAP,EAAe;AAAEM,MAAAA;AAAF,KAAf,KACV,MAAMH,cAAeE,UAAf,CAA0BC,IAA1B,CAFA;AAGRC,IAAAA,kBAAkB,EAAE,OAAOP,CAAP,EAAe;AAAEM,MAAAA;AAAF,KAAf,KAClB,MAAMH,cAAeI,kBAAf,CAAkCD,IAAlC;AAJA;AALa,CAAlB;;AAaA,MAAME,WAAW,GAAG,EAApB","sourcesContent":["import { Context } from '@types';\n\nimport UserController from './user.controller';\n\nexport const resolvers = {\n  Query: {\n    fetchMe: async (_: any, __: any, ctx: Context) =>\n      await UserController.fetchMe(ctx),\n  },\n  Mutation: {\n    updateUser: async (_: any, { data }: any) =>\n      await UserController.updateUser(data),\n    updateUserPassword: async (_: any, { data }: any) =>\n      await UserController.updateUserPassword(data),\n  },\n};\n\nexport const middlewares = {};\n"],"file":"user.resolver.js"}