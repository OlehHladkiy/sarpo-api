{"version":3,"sources":["../../../src/modules/user/user.schema.ts"],"names":["User"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,IAAI,GAAG,wBAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAjB;;eA6De,MAAM,CAACA,IAAD,C","sourcesContent":["import gql from 'graphql-tag';\n\nconst User = gql`\n  type UserAddress {\n    line1: String\n    line2: String\n    city: String\n    country: String\n  }\n\n  type User {\n    email: String!\n    name: String\n    avatar: String\n    phone: String\n    address: UserAddress\n    events: [String!]\n    createdAt: Date!\n    updatedAt: Date!\n  }\n\n  input UserAddressInput {\n    line1: String!\n    line2: String!\n    city: String!\n    country: String!\n  }\n\n  input UpdateUserInput {\n    _id: String!\n    email: String!\n    name: String\n    avatar: String\n    phone: String\n    address: UserAddressInput\n  }\n\n  input UpdateUserPasswordInput {\n    email: String!\n    currentPassword: String!\n    newPassword: String!\n  }\n\n  type UpdateUserPasswordResult {\n    user: User!\n  }\n\n  input UploadAvatarInput {\n    file: Upload!\n  }\n\n  extend type Query {\n    fetchMe: User!\n  }\n\n  extend type Mutation {\n    updateUser(data: UpdateUserInput!): User!\n    updateUserPassword(\n      data: UpdateUserPasswordInput!\n    ): UpdateUserPasswordResult!\n  }\n`;\n\nexport default () => [User];\n"],"file":"user.schema.js"}