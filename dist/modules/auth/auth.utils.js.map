{"version":3,"sources":["../../../src/modules/auth/auth.utils.ts"],"names":["owasp","config","allowPassphrases","maxLength","minLength","minPhraseLength","minOptionalTestsToPass","testPasswordStrength","password","result","test","nextError","R","compose","head","propOr","error","strong","prop","isPassphrase"],"mappings":";;;;;;;AACA;;AACA;;;;;;;;AAFA;AAIAA,mCAAMC,MAAN,CAAa;AACXC,EAAAA,gBAAgB,EAAE,IADP;AAEXC,EAAAA,SAAS,EAAE,GAFA;AAGXC,EAAAA,SAAS,EAAE,EAHA;AAIXC,EAAAA,eAAe,EAAE,EAJN;AAKXC,EAAAA,sBAAsB,EAAE;AALb,CAAb;AAQA;;;;;;;AAKO,MAAMC,oBAAoB,GAAIC,QAAD,IAAsB;AACxD,QAAMC,MAAM,GAAGT,mCAAMU,IAAN,CAAWF,QAAX,CAAf;;AACA,QAAMG,SAAS,GAAGC,CAAC,CAACC,OAAF,CAAUD,CAAC,CAACE,IAAZ,EAAkBF,CAAC,CAACG,MAAF,CAAS,EAAT,EAAa,QAAb,CAAlB,EAA0CN,MAA1C,CAAlB;AAEA,SAAO;AACLO,IAAAA,KAAK,EAAEL,SADF;AAELM,IAAAA,MAAM,EAAEL,CAAC,CAACM,IAAF,CAAO,QAAP,EAAiBT,MAAjB,CAFH;AAGLU,IAAAA,YAAY,EAAEP,CAAC,CAACM,IAAF,CAAO,cAAP,EAAuBT,MAAvB;AAHT,GAAP;AAKD,CATM","sourcesContent":["// @flow\nimport * as R from 'ramda';\nimport owasp from 'owasp-password-strength-test';\n\nowasp.config({\n  allowPassphrases: true,\n  maxLength: 128,\n  minLength: 10,\n  minPhraseLength: 20,\n  minOptionalTestsToPass: 4,\n});\n\n/**\n * Validate strong user password.\n * @param {string} password - user password.\n * @returns {Object} owasp object.\n */\nexport const testPasswordStrength = (password: string) => {\n  const result = owasp.test(password);\n  const nextError = R.compose(R.head, R.propOr([], 'errors'))(result);\n\n  return {\n    error: nextError,\n    strong: R.prop('strong', result),\n    isPassphrase: R.prop('isPassphrase', result),\n  };\n};\n"],"file":"auth.utils.js"}